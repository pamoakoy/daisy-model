* Hvorfor kaldes OrganicMatter::check (const AttributeList&) ikke directe 
  af syntax::check?

* Implementer UZreserve.

* Ændr bioclimate så PM bliver et separat energi-modul.


======================================================================
* PDaisy: limits

* Log of flux at specific depth gives problems, since flux only
happens at numeric intervals.  Find a solution.

* Dynamic N partitioning in crop.

* GodeGuard errors

* Daisy: Create an alist::default_alist entry for alist sequences.

======================================================================

* Chemical (+ API udvidelse og hjælpefunktioner)

* log.dai

Date: 

* Clone og Merge column til Nick

Date: Møde med Nich i august.

* Artikel til Env. Soft. & Mod.

Date: draft September (workshop oktober)

* DayLength for planter

Date: vent på SH

* organisk stof på overfladen (nick og os)

Date: vent på SH

* Overflademodul for pesticider (SMP96)

Date: vent på SH

* Omsætning og trasport af pestidider i jorden.

======================================================================


* Bioclimate::Irrigation bliver aldrig nulstillet!

* Standard filtre

** Generaliser Frame.

*** Gør det til et library.

*** Tilføj `name' og `number' queries (med default value)

*** Flyt `column' query til global funktion i column.h eller daisy.h

** OrganicMatter output Total C/N of AM, SOM, and SMB respectively.

** Implementer minidaisy filtre

** Implementer HS filtre.

* Implementer Partit::RSR (RootShootRatio) 

Den skal forhindre at alt assimilatet går til respiration af røderne
efter et slet af græs.

* Døde blade skal tælle med i lysfordelingen.

* clone column idea:  log + parse!  

* System til rename af duplicate object ved parsing.

* daisy_alist_check skal ikke altid skrive fejl ud på cout.

* Try out "SWIFT"

* Try out gtk--

* Få "union" valeret AList til at virke.

* Implement in parser and pretty printer:

	(define LIBRARY ELEMENT SUPER (NAME VALUE)...)

* Create `log_checkpoint.C' og slet `filter*.[Ch]'.

LogCheckpoint skal gå ud fra et kopi af den syntax/alist som startede
simularingen,  lade Daisy::output tilføje nye værdier for state
variable (samt evt. nyt objekter, specielt AM og Crop, der så skal
huske deres egen syntax), og så bruge PrinterFile til at udskrive de
nye alister.  Efter at have udskrevet de objecter der var defineret i
input filen.

* Remove exception handling.

* tkdaisy:

  Create pseudo TkDaisyEntry top level as an syntax+alist containing a
  single "daisy" element.  Use this make the step function always
  contain the syntax/alist whe name belongs to.

  Lav function til at browse en syntax, alist par.

  Lav function til at loade en dai fil

  Lav function(er) til at instantiere, test, og køre daisy object.

  Lav filter/log som sender data tilbage til tcl.

  Lav functioner der viser data statisk og dynamisk.

* Do something about category.h, and expression.X.

* Missing:

** Solute transport for groundwater.

** Make plant competition work.

** Make output of OrganicMatter total_[NC] work.

* Make it possible to specify Soil geometry with dz.

* A filter should know the syntax table.

* Output syntax.

Having multiple output statements that all added to a single list
might be nice.  Create a Syntax::size `Multiple' for this.  Use it on
Input as well to be consistent.  

Consider how this fits into the desired ability to add rules to a
Manager. 

* add text to syntax

Each syntax should have an associated static const table with text
strings giving a name, short description, long description, and unit
of each parameter.

* Split Crop in submodules the same way as is done with Soil.

* Make everything use error_log instead of cout and cerr.

* Use reference counting.

* Make CropStandard::get work.

Use a STL set for this.

Compare alist members that are Syntax::Const

Make sharing of parameters for other objects work.

* Make CSMP::find use binary search.

* Make it possible to add rules, not just overwrite them.

Create Syntax::Prepend and Syntax::Append variations of
Syntax::Sequence.  Make rules use Syntax::Prepend.

* Try to understand N extraction by crops.

* Rename Daisy to Simulation.

This will allow us to ship Condition and Action as part of the Daisy
independent library.

