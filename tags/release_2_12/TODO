TODO --- things that needs done with Daisy -*- outline -*-

* User Manual for specifying manager.

* Make it possible to log a specific entry in an array of unnamed objects.

* Log table

** Add long description for each column in a table log file.

I.e. a new select parameter named "description", plus a table option
of whether to add it to preamble of the dlf file.

** New log table spec parameter

It should have the format

   library model sumodel* attribute

it would be used to get default dimension and description of the parameter
from the syntax table, and allow automatic convertions.

* Paramerization library documentation

** Add standard paramterizations to reference manual.

** Tell "superclass" (with reference) and file(s).

** syntax.add_printer ("LaTeX", log_table_pp_LaTeX)

** Differences from superclass.

** Automate generation.

* Add state/log index to manual.

* Organic Matter

** Add DOM pool

Dissolved Organic Matter, feed by all the OM pool transformations.

** Separate abiotic factors for each OM pool transformation

** Phosphor

** Pesticides

* Add user defineable convertions.

* New 'spec' log model.

Select attribute with

    library type submodel* attribute

Use filters like

    library type

cutting of branch if it encounter an object from library not derived
from type.

* QDaisy.

** Copy/Inherit: Rebuild model.

** Menu -> Edit -> Inputs

Tilføj inputs til træ?

** Insert child, insert after.

** Menu -> File -> Run

Maybe show events in tree, like BCC?

** Filter setup

Only show a few buildin libraries and models.

** Treelog_Qt

** EditPLFs

** Specialiced model view.

** View model as text.

** Interest groups

libraries, models, parameterizations and parameters should belong to a
number of "interest groups", which can be use by QDaisy for filtering.

** Make drag and drop of "file.dai" work.

** Use radio buttons for filters in menu.

** Move Filters from QDaisy to Daisy.

** Redirect error messages

for weather std, file, hourly, and for hydraulic old, old2

** Beskriv fordele ved min GUI implementation.

- Virker med næsten alle `.dai' filer.

- Automatisk up-to-date med seneste daisy version.

* Daisy new user guide.

* CVS

** Nyt `misc' katalog med de to dhi scripts.

* Cloning.

** Check af clone af vegetation virker.

** Sørg for at cdaisy bruger de nye funktion til clone og merge.

** Implementer merge.

* GodeGuard errors

* Døde blade skal tælle med i lysfordelingen.

* Daisy som subsystem

** System til rename af duplicate object ved parsing.

** daisy_alist_check skal ikke altid skrive fejl ud på cout.

* Native GUI 

** Try out "SWIFT"

** Plot retentionskurve fra gdaisy.

** tkdaisy:

  Create pseudo TkDaisyEntry top level as an syntax+alist containing a
  single "daisy" element.  Use this make the step function always
  contain the syntax/alist whe name belongs to.

  Lav function til at browse en syntax, alist par.

  Lav function til at loade en dai fil

  Lav function(er) til at instantiere, test, og køre daisy object.

  Lav filter/log som sender data tilbage til tcl.

  Lav functioner der viser data statisk og dynamisk.

* Make it possible to specify Soil geometry with dz.

* Output syntax.

Having multiple output statements that all added to a single list
might be nice.  Create a Syntax::size `Multiple' for this.  Use it on
Input as well to be consistent.  

Consider how this fits into the desired ability to add rules to a
Manager. 

* Make PLF::find use binary search.

* Rename Daisy to Simulation.

This will allow us to ship Condition and Action as part of the Daisy
independent library.

