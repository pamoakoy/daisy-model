;;; log.dai --- standard log files

(deflog "Total Soil Content" table1
  (where "soil_content.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path column "*" SoilWater Theta)
	    (tag "Water")
	    (dimension "mm")
	    (factor 10))		;cm -> mm
	   ((tag "NH4")
	    (path column "*" SoilNH4 M)
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((tag "NO3")
	    (path column "*" SoilNO3 M)
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter total_N)
	    (tag "ORG_N")
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter total_C)
	    (tag "ORG_C")
	    (dimension "kg C/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter som N)
	    (tag "SOM_N")
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter som C)
	    (tag "SOM_C")
	    (dimension "kg C/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter smb N)
	    (tag "SMB_N")
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter smb C)
	    (tag "SMB_C")
	    (dimension "kg C/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter am "*" om N)
	    (tag "AOM_N")
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter am "*" om C)
	    (tag "AOM_C")
	    (dimension "kg C/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter buffer N)
	    (tag "BUFFER_N")
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" OrganicMatter buffer C)
	    (tag "BUFFER_C")
	    (dimension "kg C/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ))

(deflog "Soil Content 0-10 cm" "Total Soil Content"
  (where "soil_content_00-10.tab")
  (from   0)
  (to   -10))

(deflog "Soil Content 10-20 cm" "Total Soil Content"
  (where "soil_content_10-20.tab")
  (from -10)
  (to   -20))

(deflog "Soil Content 20-30 cm" "Total Soil Content"
  (where "soil_content_20-30.tab")
  (from -20)
  (to   -30))

(deflog "Soil Content 30-40 cm" "Total Soil Content"
  (where "soil_content_30-40.tab")
  (from -30)
  (to   -40))

(deflog "Soil Content 40-50 cm" "Total Soil Content"
  (where "soil_content_40-50.tab")
  (from -40)
  (to   -50))

(deflog "Soil Content 50-60 cm" "Total Soil Content"
  (where "soil_content_50-60.tab")
  (from -50)
  (to   -60))

(deflog "Soil Content 60-70 cm" "Total Soil Content"
  (where "soil_content_60-70.tab")
  (from -60)
  (to   -70))

(deflog "Soil Content 70-80 cm" "Total Soil Content"
  (where "soil_content_70-80.tab")
  (from -70)
  (to   -80))

(deflog "Soil Content 80-90 cm" "Total Soil Content"
  (where "soil_content_80-90.tab")
  (from -80)
  (to   -90))

(deflog "Soil Content 90-100 cm" "Total Soil Content"
  (where "soil_content_90-100.tab")
  (from -90)
  (to  -100))

(deflog "Soil Nitrate Concentration" table1
  (where "soil_nitrate_conc.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path column "*" SoilNO3 C)
	    (full true)			;show value in all nodes.
	    (dimension "mg/l")
	    (factor 1.0e6))))		;g/cm³ -> mg/l

(deflog "Soil Temperature" table1
  (where "soil_temperature.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path column "*" SoilHeat T)
	    (full true)			;show value in all nodes.
	    (dimension "°C"))))

(deflog "Soil Water Potential" table1
  (where "soil_water_potential.tab")
  (when hourly)
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path time hour))
	   ((path column "*" SoilWater h)
	    (full true)			;show value in all nodes.
	    (dimension "cm"))))

(deflog "Preferential Water Flux" table1
  (where "pref_flux.tab")
  (when hourly)
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path time hour))
	   ((path column "*" SoilWater q_p)
	    (full true)			;show value in all nodes.
	    (factor -10)		;cm->mm
	    (dimension "cm"))))

(deflog "Preferential NO3 Transport" table1
  (where "pref_NO3.tab")
  (when hourly)
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path time hour))
	   ((path column "*" SoilNO3 J_p)
	    (tag "NO3-J_p")
	    (full true)			;show value in all nodes.
	    (dimension "kg N/ha/d")
	    (factor -1e5))		;g/cm²/d -> kg N/ha/d
	   ))

(deflog "Preferential NH4 Transport" table1
  (where "pref_NH4.tab")
  (when hourly)
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path time hour))
	   ((path column "*" SoilNH4 J_p)
	    (tag "NH4-J_p")
	    (full true)			;show value in all nodes.
	    (dimension "kg N/ha/d")
	    (factor -1e5))		;g/cm²/d -> kg N/ha/d
	   ))

(deflog "Surface Water Balance" table1
  (where "surface_water_balance.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path weather "*" rain)
	    (when hourly)
	    (dimension "mm"))
	   ((path weather "*" snow)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" irrigation_top)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" irrigation_surface)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" total_ep)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" total_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" crop_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" canopy_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" snow_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" pond_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" soil_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" SoilWater q)
	    (tag "Matrix-Inf")
	    (when hourly)
	    (flux_at 0.0)
	    (dimension "mm")
	    (factor -10))		;cm -> mm
	   ((path column "*" SoilWater q_p)
	    (tag "MacroInf")
	    (when hourly)
	    (flux_at 0.0)
	    (dimension "mm")
	    (factor -10))		;cm -> mm
	   ((path column "*" Surface pond)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" Snow Ssnow)
	    (tag "SnowStore")
	    (dimension "mm"))))

(deflog "Root Zone Water Balance" table1
  (where "root_zone_water_balance.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path weather "*" rain)
	    (when hourly)
	    (dimension "mm"))
	   ((path weather "*" snow)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" irrigation_top)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" irrigation_surface)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" total_ep)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" total_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" crop_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" canopy_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" snow_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" pond_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" soil_ea)
	    (when hourly)
	    (dimension "mm"))
	   ((path column "*" SoilWater q)
	    (tag "Matrix-Inf")
	    (when hourly)
	    (flux_at 0.0)
	    (dimension "mm")
	    (factor -10))		;cm -> mm
	   ((path column "*" SoilWater q_p)
	    (tag "Macro-Inf")
	    (when hourly)
	    (flux_at 0.0)
	    (dimension "mm")
	    (factor -10))		;cm -> mm
	   ((path column "*" SoilWater q)
	    (tag "Matrix-perc")
	    (when hourly)
	    (flux_at -100.0)
	    (dimension "mm")
	    (factor -10))		;cm -> mm
	   ((path column "*" SoilWater q_p)
	    (tag "Pref-perc")
	    (when hourly)
	    (flux_at -100.0)
	    (dimension "mm")
	    (factor -10))		;cm -> mm
	   ((path column "*" SoilWater Theta)
	    (tag "Content")
	    (from 0.0)
	    (to -100.0)
	    (dimension "mm")
	    (factor 10))))		;cm -> mm

(deflog "N Balance" table1
  (where "N_balance.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path column "*" Surface IM NH4)
	    (tag "NH4-Surface")
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" SoilNH4 J)
	    (tag "NH4-In")
	    (when hourly)
	    (flux_at 0.0)
	    (dimension "kg N/ha/d")
	    (factor -1e5))		;g/cm²/d -> kg N/ha/d
	   ((path column "*" SoilNH4 J)
	    (when hourly)
	    (tag "NH4-Leak-Matrix")
	    (flux_at -100.0)
	    (dimension "kg N/ha/d")
	    (factor -1e5))		;g/cm²/d -> kg N/ha/d
	   ((path column "*" SoilNH4 J_p)
	    (when hourly)
	    (tag "NH4-Leak-Macro")
	    (flux_at -100.0)
	    (dimension "kg N/ha/d")
	    (factor -1e5))		;g/cm²/d -> kg N/ha/d
	   ((path column "*" Vegetation crops "*" CrpAux NH4Upt)
	    (when hourly)
	    (dimension "kg N/ha/d")
	    (factor 10.0))		;g/m²/d -> kg N/ha/d
	   ((path column "*" Nitrification "*" converted)
	    (when hourly)
	    (tag "Nit")
	    (from 0.0)
	    (to -100.0)
	    (dimension "kg N/ha/d")
	    (factor 1e5))		;g/cm²/d -> kg N/ha/d
	   ((path column "*" OrganicMatter NH4_source)
	    (when hourly)
	    (from 0.0)
	    (to -100.0)
	    (dimension "kg N/ha/d")
	    (factor 1e5))		;g/cm²/d -> kg N/ha/d
	   ((path column "*" SoilNH4 M)
	    (tag "NH4-Total")
	    (from 0.0)
	    (to -100.0)
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" Surface IM NO3)
	    (tag "NO3-Surface")
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((path column "*" SoilNO3 J)
	    (when hourly)
	    (tag "NO3-In")
	    (flux_at 0.0)
	    (dimension "kg N/ha/d")
	    (factor -1e5))		;g/cm²/d -> kg N/ha/d
	   ((path column "*" SoilNO3 J)
	    (tag "NO3-Leak-Matrix")
	    (when hourly)
	    (flux_at -100.0)
	    (dimension "kg N/ha/d")
	    (factor -1e5))		;g/cm²/d -> kg N/ha/d
	   ((path column "*" SoilNO3 J_p)
	    (tag "NO3-Leak-Macro")
	    (when hourly)
	    (flux_at -100.0)
	    (dimension "kg N/ha/d")
	    (factor -1e5))		;g/cm²/d -> kg N/ha/d
	   ((path column "*" Vegetation crops "*" CrpAux NO3Upt)
	    (when hourly)
	    (dimension "kg N/ha/d")
	    (factor 10.0))		;g/m²/d -> kg N/ha/d
	   ((path column "*" Denitrification converted)
	    (tag "Denit")
	    (when hourly)
	    (from 0.0)
	    (to -100.0)
	    (dimension "kg N/ha/d")
	    (factor 1e5))		;g/cm²/d -> kg N/ha/d
	   ((path column "*" OrganicMatter NO3_source)
	    (when hourly)
	    (from 0.0)
	    (to -100.0)
	    (dimension "kg N/ha/d")
	    (factor 1e5))		;g/cm²/d -> kg N/ha/d
	   ((tag "NO3")
	    (path column "*" SoilNO3 M)
	    (from 0.0)
	    (to -100.0)
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((tag "AOM")
	    (path column "*" OrganicMatter am "*" om N)
	    (from 0.0)
	    (to -100.0)
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((tag "SOM")
	    (path column "*" OrganicMatter som N)
	    (from 0.0)
	    (to -100.0)
	    (dimension "kg N/ha")
	    (factor 1e5))		;g/cm² -> kg/ha
	   ((tag "SMB")
	    (path column "*" OrganicMatter smb N)
	    (from 0.0)
	    (to -100.0)
	    (dimension "kg N/ha")
	    (factor 1e5))))		;g/cm² -> kg/ha

(deflog "Soil Chemicals" table1
  (where "soil_chemicals.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path column "*" SoilChemicals solutes solute J)
	    (tag "In")
	    (when hourly)
	    (flux_at 0.0)
	    (dimension "g/ha/d")
	    (factor -1e8))		;g/cm²/d -> g/ha/d
	   ((path column "*" SoilChemicals solutes solute J)
	    (tag "Leak-Matrix")
	    (when hourly)
	    (flux_at -100.0)
	    (dimension "g/ha/d")
	    (factor -1e8))		;g/cm²/d -> g/ha/d
	   ((path column "*" SoilChemicals solutes solute J_p)
	    (tag "Leak-Macro")
	    (when hourly)
	    (flux_at -100.0)
	    (dimension "g/ha/d")
	    (factor -1e8))		;g/cm²/d -> g/ha/d
	   ((path column "*" SoilChemicals solutes solute uptaken)
	    (tag "Uptake")
	    (when hourly)
	    (from 0.0)
	    (to -100.0)
	    (dimension "g/ha/d")
	    (factor 1e8))		;g/cm²/d -> g/ha/d
	   ((path column "*" SoilChemicals solutes solute decomposed)
	    (tag "Decompose")
	    (when hourly)
	    (from 0.0)
	    (to -100.0)
	    (dimension "g/ha/d")
	    (factor 1e8))		;g/cm²/d -> g/ha/d
	   ((path column "*" SoilChemicals solutes solute M)
	    (tag "Content")
	    (from 0.0)
	    (to -100.0)
	    (dimension "g/ha")
	    (factor 1e8))))		;g/cm² -> g/ha

(deflog "Weather" table1 
  (where "weather.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((when hourly)
	    (path weather "*" reference_evapotranspiration)
	    (dimension "mm/d"))
	   ((path weather "*" daily_global_radiation)
	    (dimension "W/m²"))
	   ((when hourly)
	    (path weather "*" hourly_global_radiation)
	    (factor 0.041666666666)	;h->d
	    (dimension "W/m²"))
	   ((path weather "*" daily_air_temperature)
	    (dimension "°C"))))

(deflog "Crop Production" table1
  (where "crop_prod.tab")
  (when (hour 12))			;When the stress is highest.
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path column "*" Vegetation crops "*")
	    (tag "Name"))		;Crop name.
	   ((path column "*" Vegetation crops "*" Phenology DS)
	    (dimension "none")
	    (factor 1.0))		;Development stage [-1:2]
	   ((path column "*" Vegetation crops "*" Phenology day_length)
	    (dimension "h")
	    (factor 1.0))		;Light hours previous day.
	   ((path column "*" Vegetation crops "*" Canopy CAI)
            (tag "Crop AI")
	    (dimension "none")
	    (factor 1.0))		;Leaf Area Index [0:inf]
	   ((path column "*" Vegetation crops "*" Canopy LeafAI)
            (tag "Leaf AI")
	    (dimension "none")
	    (factor 1.0))		;Leaf Area Index [0:inf]
	   ((path column "*" Vegetation crops "*" Canopy StemAI)
            (tag "Stem AI")
	    (dimension "none")
	    (factor 1.0))		;Leaf Area Index [0:inf]
	   ((path column "*" Vegetation crops "*" Canopy SOrgAI)
            (tag "SOrg AI")
	    (dimension "none")
	    (factor 1.0))		;Leaf Area Index [0:inf]
	   ((path column "*" Vegetation crops "*" RootSys Depth)
	    (dimension "cm")
	    (factor 1.0))		;cm [-inf:0]
	   ((path column "*" Vegetation crops "*" Prod WLeaf)
	    (dimension "Ton DM/ha")
	    (factor 0.01))
	   ((path column "*" Vegetation crops "*" Prod WStem)
	    (dimension "Ton DM/ha")
	    (factor 0.01))
	   ((path column "*" Vegetation crops "*" Prod WSOrg)
	    (dimension "Ton DM/ha")
	    (factor 0.01))
	   ((path column "*" Vegetation crops "*" Prod WRoot)
	    (dimension "Ton DM/ha")
	    (factor 0.01))
	   ((path column "*" Vegetation crops "*" CrpAux Fixated)
	    (accumulate true)
	    (dimension "kg N/ha")
	    (factor 10.0))
	   ((path column "*" Vegetation crops "*" Prod NLeaf)
	    (dimension "kg N/ha")
	    (factor 10.0))
	   ((path column "*" Vegetation crops "*" Prod NStem)
	    (dimension "kg N/ha")
	    (factor 10.0))
	   ((path column "*" Vegetation crops "*" Prod NSOrg)
	    (dimension "kg N/ha")
	    (factor 10.0))
	   ((path column "*" Vegetation crops "*" Prod NRoot)
	    (dimension "kg N/ha")
	    (factor 10.0))
	   ((path column "*" Vegetation crops "*" RootSys water_stress))
	   ((path column "*" Vegetation crops "*" RootSys nitrogen_stress))
	   ))

(deflog "Old Crop Production" table1
  (where "old_crop_prod.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path column "*" Vegetation crops "*")
	    (tag "Name"))		;Crop name.
	   ((path column "*" Vegetation crops "*" Phenology DS)
	    (dimension "none")
	    (factor 1.0))		;Development stage [-1:2]
	   ((path column "*" Vegetation crops "*" Phenology day_length)
	    (dimension "h")
	    (factor 1.0))		;Light hours previous day.
	   ((path column "*" Vegetation crops "*" Canopy LAI)
	    (dimension "none")
	    (factor 1.0))		;Leaf Area Index [0:inf]
	   ((path column "*" Vegetation crops "*" RootSys Depth)
	    (dimension "cm")
	    (factor 1.0))		;cm [-inf:0]
	   ((path column "*" Vegetation crops "*" Prod WLeaf)
	    (dimension "Ton DM/ha")	;Actually stem + leaf + grain
	    (factor 0.01))
	   ((path column "*" Vegetation crops "*" Prod WSOrg)
	    (dimension "Ton DM/ha")	;Beet & Potatoes only
	    (factor 0.01))
	   ((path column "*" Vegetation crops "*" Prod WRoot)
	    (dimension "Ton DM/ha")
	    (factor 0.01))
	   ((path column "*" Vegetation crops "*" CrpAux Fixated)
	    (accumulate true)
	    (dimension "kg N/ha")
	    (factor 10.0))
	   ((path column "*" Vegetation crops "*" Prod NCrop)
	    (dimension "kg N/ha")
	    (factor 10.0))
	   ))

(deflog "Vegetation" table1
  (where "vegetation.tab")
  (when (hour 0))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path column "*" Vegetation LAI)
	    (dimension "m2/m2"))
	   ((path column "*" Vegetation height)
	    (dimension "cm"))
	   ((path column "*" Vegetation cover)
	    (dimension "0-1"))
	   ((path column "*" Vegetation ACExt)
	    (dimension "ACExt"))
	   ((path column "*" Vegetation ACRef)
	    (dimension "ACRef"))
	   ((path column "*" Vegetation ARExt)
	    (dimension "ARExt"))
	   ((path column "*" Vegetation EpFactor)
	    (dimension "EpFactor"))
	   ((path column "*" Vegetation albedo)
	    (dimension "albedo"))
	   ((path column "*" Vegetation interception_capacity)
	    (dimension "mm"))))


(deflog "Surface Chemicals" table1
  (where "surface_chemicals.tab")
  (when (hourly))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path time hour))
	   ((path column "*" Bioclimate "*" snow_chemicals_in amount)
	    (tag snow_chemicals_in)
	    (dimension "g/m^2/h"))
	   ((path column "*" Bioclimate "*" snow_chemicals_storage amount)
	    (tag snow_chemicals_storage)
	    (dimension "g/m^2"))
	   ((path column "*" Bioclimate "*" snow_chemicals_out amount)
	    (tag snow_chemicals_out)
	    (dimension "g/m^2/h"))
	   ((path column "*" Bioclimate "*" canopy_chemicals_in amount)
	    (tag canopy_chemicals_in)
	    (dimension "g/m^2/h"))
	   ((path column "*" Bioclimate "*" canopy_chemicals_storage amount)
	    (tag canopy_chemicals_storage)
	    (dimension "g/m^2"))
	   ((path column "*" Bioclimate "*" canopy_chemicals_dissipate amount)
	    (tag canopy_chemicals_dissipate)
	    (dimension "g/m^2/h"))
	   ((path column "*" Bioclimate "*" canopy_chemicals_out amount)
	    (tag canopy_chemicals_out)
	    (dimension "g/m^2/h"))
	   ((path column "*" Bioclimate "*" surface_chemicals_in amount)
	    (tag surface_chemicals_in)
	    (dimension "g/m^2/h"))
	   ((path column "*" Bioclimate "*" surface_chemicals_storage amount)
	    (tag surface_chemicals_storage)
	    (dimension "g/m^2"))
	   ((path column "*" Bioclimate "*" surface_chemicals_out amount)
	    (tag surface_chemicals_out)
	    (dimension "g/m^2/h"))))

(deflog "Bioclimate" table1
  (where "bioclimate.tab")
  (when hourly)
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path time hour))
	   ((path weather "*" daily_air_temperature)
	    (dimension "dg C"))
	   ((path weather "*" hourly_air_temperature)
	    (dimension "dg C"))
	   ((path weather "*" hourly_global_radiation)
	    (dimension "W/m2"))
	   ((path weather "*" daily_global_radiation)
	    (dimension "W/m2"))
	   ((path weather "*" reference_evapotranspiration)
	    (dimension "mm/h"))
	   ((path weather "*" rain)
	    (dimension "mm/h"))
	   ((path weather "*" snow)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" total_ep)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" total_ea)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" irrigation_top)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" irrigation_top_temperature)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" irrigation_surface)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" irrigation_surface_temperature)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" canopy_ep)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" canopy_ea)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" canopy_water_storage)
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" canopy_water_storage_temperature)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" canopy_water_in)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" canopy_water_out)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" canopy_water_bypass)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" snow_ep)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" snow_ea)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" snow_water_in)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" Snow Ssnow)
	    (tag "snow_water_storage")
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" snow_water_in_temperature)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" snow_water_out)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" snow_water_out_temperature)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pond_ep)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" pond_ea)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" pond_water_in)
	    (dimension "mm/h"))
	   ((path column "*" Surface pond)
	    (tag "pond_water_storage")
	    (dimension "mm"))
	   ((path column "*" Bioclimate "*" pond_water_in_temperature)
	    (dimension "dg C"))
	   ((path column "*" SoilWater q)
	    (tag "soil_water_in")
	    (flux_at 0.0)
	    (dimension "mm/h")
	    (factor -10))		;cm -> mm
	   ((path column "*" Bioclimate "*" soil_ep)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" soil_ea)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" crop_ep)
	    (dimension "mm/h"))
	   ((path column "*" Bioclimate "*" crop_ea)
	    (dimension "mm/h"))))

(deflog "PMSW" table1
  (where "pmsw.tab")
  (when hourly)
  (print_dimension false)
  (print_tags false)
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path time hour))
	   ((path column "*" Bioclimate "*" pt PMSW netrad_brunt)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW netlong_brunt)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW r_a)
	    (dimension "s/m"))
	   ((path column "*" Bioclimate "*" pt PMSW r_astab)
	    (dimension "s/m"))
	   ((path column "*" Bioclimate "*" pt PMSW r_aa)
	    (dimension "s/m"))
	   ((path column "*" Bioclimate "*" pt PMSW r_aa_dry)
	    (dimension "s/m"))
	   ((path column "*" Bioclimate "*" pt PMSW r_aa_pot)
	    (dimension "s/m"))
	   ((path column "*" Bioclimate "*" pt PMSW r_as)
	    (dimension "s/m"))
	   ((path column "*" Bioclimate "*" pt PMSW r_ac)
	    (dimension "s/m"))
	   ((path column "*" Bioclimate "*" pt PMSW r_sc_1)
	    (dimension "s/m"))
	   ((path column "*" Bioclimate "*" pt PMSW r_sc_2)
	    (dimension "s/m"))
	   ((path column "*" Bioclimate "*" pt PMSW tskin)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW tcan)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW tleaf)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW e_c)
	    (dimension "Pa"))
	   ((path column "*" Bioclimate "*" pt PMSW e_sl)
	    (dimension "Pa"))
	   ((path column "*" Bioclimate "*" pt PMSW tskin_pot)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW tcan_pot)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW tleaf_pot)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW e_c_pot)
	    (dimension "Pa"))
	   ((path column "*" Bioclimate "*" pt PMSW e_sl_pot)
	    (dimension "Pa"))
	   ((path column "*" Bioclimate "*" pt PMSW ha)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW hl)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW hs)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW lea)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW lel)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW ha_pot)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW hl_pot)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW hs_pot)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW lea_pot)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW lel_pot)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW gflux)
	    (dimension "W/m**2"))
	   ((path column "*" Bioclimate "*" pt PMSW dtcta)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW dtltc)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW dtstc)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW dtcta_pot)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW dtltc_pot)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW dtstc_pot)
	    (dimension "dg C"))
	   ((path column "*" Bioclimate "*" pt PMSW theta_0_20)
	    (dimension "cm3/cm3"))
	   ((path column "*" Bioclimate "*" pt PMSW theta_0_50)
	    (dimension "cm3/cm3"))
	   ((path column "*" Bioclimate "*" pt PMSW theta_0_100)
	    (dimension "cm3/cm3"))
	   ((path column "*" Bioclimate "*" pt PMSW f_1)
	    (dimension "NA"))
	   ((path column "*" Bioclimate "*" pt PMSW f_2)
	    (dimension "NA"))
	   ((path column "*" Bioclimate "*" pt PMSW f_3)
	    (dimension "NA"))
	   ((path column "*" Bioclimate "*" pt PMSW f_4)
	    (dimension "NA"))
	   ((path column "*" Bioclimate "*" pt PMSW f_temp)
	    (dimension "NA"))
	   ((path column "*" Bioclimate "*" pt PMSW f_def)
	    (dimension "NA"))
	   ((path column "*" Bioclimate "*" pt PMSW f_theta)
	    (dimension "NA"))))

(deflog "Groundwater" table1
  (where "groundwater.tab")
  (when (hour 12))
  (entries ((path time year))
	   ((path time month))
	   ((path time mday))
	   ((path column "*" Groundwater "*" height)
	    (tag "table")
	    (dimension "cm"))))

(deflog "Harvest" file "harvest.log" (not (running))
  (some (harvest)))

;;; log.dai ends here
